QUESTION: If you create a constructor method to build a DVD by title then create a constructor method to build a DVD by category. Does JAVA allow you to do this?

ANSWER: Both title and constructor are String so when you declare a new DVD with a string argument, JAVA cannot determine whether that argument is title or category. In short, JAVA doesn’t allow you to do this.
 
QUESTION: Try to add a method addDigitalVideoDisc which allows to pass an arbitrary number of arguments for dvd. Compared to an array parameter. What do you prefer in this case?

ANSWER: In this case, I prefer to use the method with a variable arguments because we can pass an array argument or just pass sequentially how many arguments you want to the method, then it seem to be more convenient.

QUESTION: Is JAVA a Pass by Value or a Pass by Reference programming language?

ANSWER: Java is a Pass-by-value programming language, not Pass by Reference programming language.

QUESTION: After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two objects still remain?

ANSWER: When we call swap(jungleDVD, cinderellaDVD), we just implement with the copies of jungleDVD and cinderellaDVD. So that, our discs in the main class are not affected.

QUESTION: After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is the title of the JungleDVD changed?

ANSWER: When we call changeTitle(jungleDVD, cinderellaDVD.getTitle()), the copies still point to the same reference locations of the discs in the main class and the values in the reference locations. So that, the title value changes.

QUESTION: Which classes are aggregates of other classes? Checking all constructors of whole classes if they initialize for their parts?

ANSWER:	- Cart is aggregate of Media
	- Store is aggregate of Media
	- CompactDisc is aggregate of Track
	- Checking all constructors of whole classes if they initialize for their parts? Done
	
QUESTION: 
- Create an ArrayList of Media, then add some media (CD, DVD, or Book) to the list.
- Iterate through the list and print out the information of the media by using the toString() method.
Observe what happens and explain it in detail.

ANSWER: When I iterate through the list and print out the information, the result of toString() method is correspond to each type of media at each iteration. 
	We know that Media class inherit the toString() method from Object class, and then in this case, the toString() method is overridden by CompactDisc, DigitalVideoDisc, Book which are children of Media class. The toString() method inside the three children will have more priority than inside the Media class.
	When we iterate through the list of media, Java determine the class type of each element and find the toString() inside the class(CD, DVD or Book), if not exists, it continue to find inside the Media class, if not exist, it continue to find in the Object class and finally execute the toString() method.